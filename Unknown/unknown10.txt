import static java.lang.Math.*;
 import static java.util.Arrays.*;
 import java.io.*;
 import java.util.*;
 
 public class B {
 	Scanner sc = new Scanner(System.in);
 	
 	int C, D, N;
 	char[][] combine;
 	boolean[][] oppose;
 	char[] cs;
 	
 	void read() {
 		C = sc.nextInt();
 		combine = new char[255][255];
 		for (int i = 0; i < C; i++) {
 			String s = sc.next();
 			combine[s.charAt(0)][s.charAt(1)] = s.charAt(2);
 			combine[s.charAt(1)][s.charAt(0)] = s.charAt(2);
 		}
 		D = sc.nextInt();
 		oppose = new boolean[255][255];
 		for (int i = 0; i < D; i++) {
 			String s = sc.next();
 			oppose[s.charAt(0)][s.charAt(1)] = true;
 			oppose[s.charAt(1)][s.charAt(0)] = true;
 		}
 		N = sc.nextInt();
 		cs = sc.next().toCharArray();
 	}
 	
 	void solve() {
 		char[] res = new char[N];
 		int n = 0;
 		for (int i = 0; i < N; i++) {
 			res[n++] = cs[i];
 			if (n >= 2) {
 				if (combine[res[n - 2]][res[n - 1]] > 0) {
 					res[n - 2] = combine[res[n - 2]][res[n - 1]];
 					n--;
 				} else {
 					for (int j = 0; j < n - 1; j++) if (oppose[res[j]][res[n - 1]]) {
 						n = 0;
 					}
 				}
 			}
 		}
 		System.out.println(Arrays.toString(Arrays.copyOf(res, n)));
 	}
 	
 	void run() {
 		long time = System.currentTimeMillis();
 		int caseN = sc.nextInt();
 		for (int caseID = 1; caseID <= caseN; caseID++) {
 			double t = (System.currentTimeMillis() - time) * 1e-3;
 			System.err.printf("Case %03d/%03d, Time %.3fms%n", caseID, caseN, t);
 			read();
 			System.out.printf("Case #%d: ", caseID);
 			solve();
 			System.out.flush();
 		}
 	}
 	
 	void debug(Object...os) {
 		System.err.println(deepToString(os));
 	}
 	
 	public static void main(String[] args) {
 		try {
 //			System.setIn(new BufferedInputStream(new FileInputStream(B.class.getName() + ".in")));
 		} catch (Exception e) {
 		}
 		new B().run();
 	}
 }
