import static java.lang.Math.*;
 import static java.math.BigInteger.*;
 import static java.util.Arrays.*;
 import static java.util.Collections.*;
 import java.math.*;
 import java.util.*;
 
 public class B {
 	static final int INF = 1 << 29;
 	public static void main(String[] args) {
 		new B().run();
 	}
 	void run() {
 		Scanner sc = new Scanner(System.in);
 		int on = sc.nextInt();
 		for (int o = 1; o <= on; o++) {
 			System.out.printf("Case #%d: ", o);
 			int n = sc.nextInt(), m = sc.nextInt();
 			int[][] g = new int[n][m];
 			for (int i = 0; i < m; i++) {
 				int t = sc.nextInt();
 				while (t-- > 0) g[sc.nextInt() - 1][i] = sc.nextInt() + 1;
 			}
 			int min = INF;
 			int[] res = new int[n];
 			for (int i = 0; i < 1 << n; i++) if (min > Integer.bitCount(i)) {
 				boolean ok = true;
 				for (int j = 0; j < m; j++) {
 					boolean b = false;
 					for (int k = 0; k < n; k++) {
 						b |= g[k][j] == 1 && (i & (1 << k)) == 0;
 						b |= g[k][j] == 2 && (i & (1 << k)) > 0;
 					}
 					if (!b) ok = false;
 				}
 				if (ok) {
 					min = Integer.bitCount(i);
 					for (int j = 0; j < n; j++) res[j] = (i & (1 << j)) == 0 ? 0 : 1;
 				}
 			}
 			if (min == INF) System.out.println("IMPOSSIBLE");
 			else {
 				for (int i = 0; i < n; i++) {
 					if (i > 0) System.out.print(" ");
 					System.out.print(res[i]);
 				}
 				System.out.println();
 			}
 		}
 	}
 	void debug(Object...os) {
 		System.err.println(deepToString(os));
 	}
 }
